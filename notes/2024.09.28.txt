Today let's do this old TO-DO:
    TO-DO: In Database in parseListOfInt() make the first written thing be the number of elements so that we can allocate memory more effeciently.

First of all, let's rename parseListOfInt() to be parseIntList(), sounds better.
Now let's just implement it, kinda straightforward.
Only thing to think about is what to do if the count is invalid.
I did it with 2 separate checks.
First, count could be < 0, in this case I just don't allocate memory in the beginning,
and I let vector allocate its memory dynamically as it grows.
Second, count could be >= 0 and we will allocate that much memory, but the actual elements might be more/less.
We can't really do anything in this case, just in the end check if the resulting list
has as many elements as the count, and if it doesn't log a warning.
It's not really a problem, everything will still work perfectly fine,
just a sanity check and a bit of optimization.

(later, came back, 2024.09.30) I forgot to implement this in serializeListInt(),
and rename it to serializeIntList()

Now I'll finally comment the functions in Database.h
because they are kinda finished/complete now.
Only thing left to do in Database for now is exporting.

And I noticed that the function
    loadSeparators()
is not really supposed to take dataFilepath as argument.
The separators will always be in the same filepath and only Database is responsible for knowing that path.
That's different from loading words and word sets in
    loadWords()
    loadWordSets()
There it makes sense to take dataFilepath as argument, because these could be callable by other code in the future.
For now they are private and we call it only in database with hardcoded filepaths
because we know where the data files for words and word sets are,
but in the future we will probably have multiple such files
and they will probably be per user,
so it makes sense that outer code will have to call loadWords() and loadWordSets()
to load the specific words and word sets that are needed now.
On the other hand, the separators are not really supposed to change
and they are only Database's business.
